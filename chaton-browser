#!/usr/bin/env gosh
;; Archive browser CGI

(add-load-path "@@server-data-dir@@")

(define-module chaton.browser
  (use www.cgi)
  (use text.html-lite)
  (use text.tree)
  (use file.util)
  (use chaton)
  (use srfi-19)
  (export run-browser))
(select-module chaton.browser)

(define *room* "@@room-name@@")

(define (run-browser args)
  (cgi-main (lambda (params)
              (rxmatch-case (cgi-get-metavariable "PATH_INFO")
                [#/^\/(\d\d\d\d)\/(\d\d)\/(\d\d)$/ (_ y m d)
                 (emit-archfile (x->integer y) (x->integer m) (x->integer d))]
                [#/^\/today/ () (emit-redirect (current-date))]
                [#/^\/yesterday/ () (emit-redirect (previous-date))]
                [else (emit-archfile "0" "0" "0")]))))

(define (previous-date)
  (let1 c (current-date)
    (modified-julian-day->date
     ;; we take the noon of current date in order to avoid irregularity
     ;; on DST boundary.
     (- (date->modified-julian-day
         (make-date 0 0 0 12 (date-day c) (date-month c) (date-year c)
                    (date-zone-offset c)))
        1))))

(define (emit-redirect date)
  (cgi-header
   :location (apath (date-year date) (date-month date) (date-day date))))

(define (emit-archfile y m d)
  (let1 archfile (build-path +datadir+ #`",(ymd y m d).dat")
    (make-page y m d (if (file-exists? archfile)
                          (chaton-render-from-file archfile 0 #f)
                          ""))))

(define (make-page y m d content)
  (let1 title (format "~a > Archives > ~a" *room* (ymd y m d))
    `(,(cgi-header :content-type "text/html; charset=utf-8")
      ,(html:html
        (html:head
         (html:title (html-escape-string title))
         (html:link :href "@@httpd-url@@@@url-path@@chaton.css"
                    :rel "Stylesheet" :type "text/css")
         (html:script :src "@@prototype-url@@" :type "text/javascript")
         (html:script :src "@@httpd-url@@@@url-path@@@@chaton-js@@"
                      :type "text/javascript"))
        (html:body
         (html:h1 :id "room-title"
                  (html:img :class "room-icon" :src "@@icon-url@@"
                            :align "absmiddle" :alt "")
                  (html-escape-string title))
         (html:div
          :id "left-pane"
          (navigate-bar y m d)
          (html:div :id "archive-view" content)
          (navigate-bar y m d)))))))

(define (navigate-bar y m d)
  (html:div
   :class "archive-navigate"
   (html:table
    (html:tr
     (html:td :class "to-prev" (day-link y m d -1 "<< ~a"))
     (html:td :class "to-room" (html:a :href +room-url+ "Back to the chat room"))
     (html:td :class "to-next" (day-link y m d +1 "~a >>"))))))

(define (day-link y m d inc fmtstr)
  (let* ([this-day (make-date 0 0 0 12 d m y 0)]
         [the-day  (julian-day->date (+ (date->julian-day this-day) inc))]
         [y (date-year the-day)]
         [m (date-month the-day)]
         [d (date-day the-day)])
    (html:a :href (apath y m d) (format fmtstr (ymd y m d)))))

(define (apath y m d) (format "~a/~4,'0d/~2,'0d/~2,'0d" +archive-url+ y m d))
(define (ymd   y m d) (format "~4,'0d/~2,'0d/~2,'0d" y m d))

;;;===================================================================

(select-module user)
(import chaton.browser)
(define main run-browser)

;; Local variables:
;; mode: scheme
;; end:
