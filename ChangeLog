2009-05-17  Shiro Kawai  <shiro@acm.org>

	* chaton-viewer (do-monitor): use read-lock while checking the size,
	  to avoid the hazard if the active log is truncated during checking.
	  Also touched sources for clearity.

	* chaton.js, chaton-viewer: Changed json/s-expr field name of the
	  comet reply packet from 'text' to 'content'.

2009-05-16  Shiro Kawai  <shiro@acm.org>

	* chaton.scm (render-url): recognize capital letter suffix for images
	  as well.

2009-05-15  Shiro Kawai  <shiro@acm.org>

	* client/*: Start adding client library.

	* chaton-viewer (get-header): Read request headers.  Without properly
	  doing that, the timing of reply got screwed and some clients can't
	  receive proper reply.

2009-05-14  Shiro Kawai  <shiro@acm.org>

	* chaton-viewer: Added support for intitial CID generation for API,
	  robots.txt, and returns some reasonable status for other unsupported
	  requests.

2009-05-12  Shiro Kawai  <shiro@acm.org>

	* chaton.js (fetchContent): fix handling of disconnecting events.
	  It was wrong to use onException; Firefox calls onSuccess with empty
	  body when disconnected.

	* chaton-viewer: start adding s-expr interface.
	  Rejects duplicate request from the same cid.

	* chaton.scm (chaton-read-entries, chaton-render-from-file): split
	  atomic file reading part from chaton-render-from-file.

2009-05-11  Shiro Kawai  <shiro@acm.org>

	* chaton-apilogin: Added.
	* build-site, htaccess: Changed accordingly.

	* chaton-viewer (make-json-packet, write-status-js): Use double-quote
	  to quote field name to comply json spec (rfc4627).

2009-05-10  Shiro Kawai  <shiro@acm.org>

	* chaton.js (startWatchDog, tameWatchDog, bark): Added watchdog timer
	  for comet connection to support browsers that don't fire any events
	  when Ajax connection is lost.  The timer won't be fired in normal
	  circumstances; it only barks when Comet server is restarted but
	  the browser failed to detect it.

	* htaccess: Force charset=utf-8 for *.html, since the room description
	  may contain utf-8 characters.

	* sample.conf, chaton.css: Added right-pane including room description
	  and link to the badge.

	* chaton-badge, badge.html: Added Badge support.
	* htaccess, build-site, chaton.css: Changed accordingly.

2009-05-09  Shiro Kawai  <shiro@acm.org>

	* chaton.scm (with-output-to-file): Provides a wrapper to support
	  :atomic keyword arg, that implements a common idiom of write-to-
	  temporary-file-and-rename.
	  (+docdir+ etc.): Provides common constants.
	* chaton-poster: Adapted to the new chaton.scm.

	* chaton-viewer (emit-skeleton): Adds HTTP response header for the
	  initial skeleton.
	  (spawn-status): Writes out $(DOCDIR)/var/status.{js,scm} periodically
	  for those who wants to monitor room status (this obsoletes the old
	  var/seq file.)

2009-05-08  Shiro Kawai  <shiro@acm.org>

	* chaton-poster (increment-sequence): Saves post sequence number under
	  $DATADIR/data/sequence instead of $DOCDIR/var/seq.  The latter is
	  supported for a while until client side javascript is totally
	  updated.
	  (record-last-post-timestamp): Saves it to $DATADIR/data/last-post.

	* chaton-viewer (client-tracker): Records the current number of
	  chatters under $DATADIR/data/num-chatters.

	* chaton-browser (main): 'a/yesterday' link to redirect to
	  the yesterday's archive.
	* chaton.html: "Read archive" link points to a/yesterday.

	* chaton-archiver: Rewrote to handle multiple past dates with
	  sane DST handling, and also allow to leave some minimum amount
	  of entries in current.dat instead of truncating it strictly
	  to the today's entry.

2009-05-07  Shiro Kawai  <shiro@acm.org>

	* chaton.scm (chaton-with-shared-locking,chaton-with-exclusive-locking):
	  Put locking primitives here.
	* chaton-poster (poster-main): Adapted to use the locking primitive
	  in chaton.scm.  Wrapped main code with define-module for
	  testing.

	* chaton.js: If the user is scrolling up to read past messages,
	  do not scroll to botton when contents is added.  (Thanks to
	  Toru Hisai for the hint).

	* chaton-archiver (filter-entry): Adapted to the new data file
	  format.

2009-05-06  Shiro Kawai  <shiro@acm.org>

	* chaton.js (initViewFrame), chaton-viewer (make-skeleton): Put
	  one trampoline of setTimeout before start fetching the content
	  into iframe; Safari apparently doesn't like the JapaScript open
	  Comet connection within the onLoad handler (the browser window
	  stays "loading..." state.)

	* chaton-viewer (emit-tail), chaton.js (fetchContent): Manage clients
	  using clients ids.  If no status change, ping back to a client
	  in much longer time (~5min) than before (~45sec) for less traffic.
	  Also tracks # of clients more precisely, though there is some
	  delay involved.

	* chaton-poster (make-entry): Record remote IP as well.
	* chaton.scm (chaton-render-1): Adapted to the new entry.

	* chaton.js (enablePost): moves focus forcibly to fix a weird
	  behavior of dissapearing cursor in the textarea.

	* chaton-archiver (chore-for-the-day): Create a link two days
	  advance.  Because we can't start archiving data for, say, 1/10,
	  until it's 1/11, and at that moment we need 1/11's link has to
	  be already created.  Who create that link?  The archiver process
	  that ran 1/10, which archived the data for 1/9.  Thus we need
	  to create link for two days beyond the date we're archiving.

	* chaton-viewer: Added -r option (restart) and -c option (check)
	  for ease of server management.

2009-05-05  Shiro Kawai  <shiro@acm.org>

	* chaton-viewer (emit-tail, spawn-monitor): fixed *mutex* treatment.
	  (emit-skeleton): no need to read out *text-map* yet.
	  (main): Added graceful termination by signalling, write pid file
	  for management, and -k option to kill the running server.

	* build-site: Check if chaton.js needs to be updated, and if not,
	  do not replace chaton.js (and the viewer's version).

	* chaton-browser (make-page): Changed title display.

	* chaton-archiver, chaton-viewer, chaton-browser, chaton-poster:
	  Changed current.dat and archive directory under $DATADIR/data/,
	  and log directory under $DATADIR/logs/, respectievly.  Since
	  the directory where current.dat exists must be writable from
	  CGI scripts, it is safe to put them into a subdir so that
	  we can secure $DATADIR itself.
	* build-site (do-build): Ensure new directory strcuture, and
	  also create the data files if it does not exist.

	* chaton.js: Sets nickname cookie even post-text is empty; allowing
	  the client to change nickname without actually posting a message.


