#!/usr/bin/env gosh

(add-load-path "@@server-data-dir@@")

(define-module chaton.poster
  (use www.cgi)
  (use srfi-13)
  (use file.util)
  (use util.list)
  (use text.html-lite)
  (use text.tree)
  (use chaton)
  (export poster-main))
(select-module chaton.poster)

(define *limit* 2048)
(define *datadir* (or (cgi-get-metavariable "CHATON_DATADIR")
                      "@@server-data-dir@@data"))
(define *curfile*  (build-path *datadir* "current.dat"))

(define *docdir*  (or (cgi-get-metavariable "CHATON_DOCDIR")
                      "@@server-htdocs-dir@@"))
(define *seqfile*  (build-path *docdir* "var/seq"))

(define (poster-main args)
  (cgi-main (lambda (params)
              (let ([nick (cgi-get-parameter "nick" params :default #f)]
                    [text (cgi-get-parameter "text" params :default #f)])
                (make-directory* *datadir*) ;ensure
                (chaton-with-exclusive-locking
                 (lambda ()
                   (call-with-output-file *curfile*
                     (cut update <>
                          (string-trim-both nick) (string-trim-both text))
                     :if-exists :append)))
                (emit-reply))))
  0)

(define (emit-reply)                    ;dummy
  (write-tree `(,(cgi-header) ,(html:html (html:head) (html:body)))))

(define (update out nick text)
  (unless (or (string-null? nick) (string-null? text))
    (append-entry out nick text)
    (increment-sequence)))

(define (append-entry out nick text)
  (port-seek out 0 SEEK_END)
  (write (make-entry nick text) out)
  (newline out))

(define (make-entry nick text)
  (let1 s (string-incomplete->complete text #\?)
    (receive (sec usec) (sys-gettimeofday)
      `(,nick (,sec ,usec)
              ,(if (> (string-length s) *limit*) (string-take s *limit*) s)
              ,(cgi-get-metavariable "REMOTE_ADDR")))))

;; seqfile is only touched while current.txt is locked, so we don't
;; bother to lock it.
(define (increment-sequence)
  (let ([cnt (if (file-exists? *seqfile*)
               (x->integer (file->string *seqfile*))
               0)]
        [tmpfile #`",|*seqfile*|.tmp"])
    (make-directory* (sys-dirname *seqfile*))
    (with-output-to-file tmpfile (cut write (+ cnt 1)))
    (sys-rename tmpfile *seqfile*)))

;;;===================================================================
(select-module user)

(import chaton.poster)
(define main poster-main)

;; Local variables:
;; mode: scheme
;; end:
